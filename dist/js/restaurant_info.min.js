
"use strict";let restaurant;let map;let reviews;window.onload=function(){if(navigator.onLine){DBHelper.getReviewsFromDb().then(reviews=>{reviews.forEach(review=>{DBHelper.postReview(review.restaurant_id,review.name,review.rating,review.comments);});});}};window.initMap=()=>{fetchRestaurantFromURL().then(restaurant=>{self.restaurant=restaurant;self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:restaurant.latlng,scrollwheel:false});fillRestaurantHTML();DBHelper.mapMarkerForRestaurant(self.restaurant,self.map);fetchReviewsFromURL().then(reviews=>{self.reviews=reviews;fillReviewsHTML();}).catch(error=>{alert(error);});}).catch(error=>{alert(error);});};const fetchRestaurantFromURL=callback=>{return new Promise((resolve,reject)=>{if(self.restaurant){resolve(self.restaurant);return;}
const id=getParameterByName("id");if(!id){reject("No restaurant id in URL");return;}
DBHelper.fetchRestaurantById(id).then(restaurant=>{if(!restaurant){reject("Restaurant not found!");return;}
resolve(restaurant);}).catch(error=>{reject(error);});});};const fetchReviewsFromURL=callback=>{return new Promise((resolve,reject)=>{if(self.reviews){resolve(self.reviews);return;}
DBHelper.fetchReviewsById(self.restaurant.id).then(reviews=>{if(!reviews){reject("reviews not found!");return;}
resolve(reviews);}).catch(error=>{reject(error);});});};const fillRestaurantHTML=(restaurant=self.restaurant)=>{const name=document.getElementById("restaurant-name");name.innerHTML=restaurant.name;const input=document.createElement("input");input.setAttribute("type","checkbox");input.id=`favcheckbox-${restaurant.id}`;if(restaurant.is_favorite)console.log("This restaurant is faved");else console.log("This restaurant is NOT faved");if(restaurant.is_favorite=="true"){input.checked=restaurant.is_favorite;}else{input.removeAttribute("checked");}
input.setAttribute("name",`plain-${restaurant.id}`);input.onclick=favResto(restaurant.id);const label=document.createElement("label");label.setAttribute("for",`plain-${restaurant.id}`);label.innerHTML="Mark Restaurant as Favorite";const iconWrapper=document.createElement("div");iconWrapper.className="state p-success-o";const icon=document.createElement("i");icon.className="icon mdi mdi-heart";iconWrapper.appendChild(icon);iconWrapper.appendChild(label);const favCheck=document.getElementById("fav-check");favCheck.className="pretty p-icon p-round p-plain p-smooth";favCheck.appendChild(input);favCheck.appendChild(iconWrapper);const address=document.getElementById("restaurant-address");address.innerHTML=restaurant.address;const image=document.getElementById("restaurant-img");image.src=DBHelper.imgSrcForRestaurant(restaurant);const cuisine=document.getElementById("restaurant-cuisine");cuisine.innerHTML=restaurant.cuisine_type;if(restaurant.operating_hours){fillRestaurantHoursHTML();}};const fillRestaurantHoursHTML=(operatingHours=self.restaurant.operating_hours)=>{const hours=document.getElementById("restaurant-hours");for(let key in operatingHours){const row=document.createElement("tr");const day=document.createElement("td");day.innerHTML=key;row.appendChild(day);const time=document.createElement("td");time.innerHTML=operatingHours[key];row.appendChild(time);hours.appendChild(row);}};const fillReviewsHTML=(reviews=self.reviews)=>{const container=document.getElementById("reviews-container");const divider=document.createElement("br");if(!reviews){const noReviews=document.createElement("p");noReviews.innerHTML="No reviews yet!";container.appendChild(noReviews);return;}
reviews.reverse();const ul=document.getElementById("reviews-list");ul.appendChild(divider);reviews.forEach(review=>{ul.appendChild(createReviewHTML(review));});container.appendChild(ul);};const createReviewHTML=review=>{const li=document.createElement("li");const name=document.createElement("p");name.innerHTML=review.name;li.appendChild(name);let dateObj=new Date(review.createdAt);var month=["January","February","March","April","May","June","July","August","September","October","November","December"][dateObj.getMonth()];var postDate=dateObj.getDate()+" "+month+" "+dateObj.getFullYear();const date=document.createElement("p");date.innerHTML=postDate;li.appendChild(date);const rating=document.createElement("p");rating.innerHTML=`Rating: ${review.rating}`;li.appendChild(rating);const comments=document.createElement("p");comments.innerHTML=review.comments;li.appendChild(comments);return li;};const getParameterByName=(name,url=window.location.href)=>{name=name.replace(/[\[\]]/g,"\\$&");const regex=new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`),results=regex.exec(url);if(!results)return null;if(!results[2])return"";return decodeURIComponent(results[2].replace(/\+/g," "));};const reviewRestaurant=(restaurant=self.restaurant)=>{let id=restaurant.id;let name=document.getElementById("post-review-name").value;let rating=document.getElementById("post-review-rating").value;let message=document.getElementById("post-review-message").value;if(name!=""&&message!=""){let reviewCreated={restaurant_id:id,name:name,rating:rating,comments:message};axios.post(DBHelper.REVIEWS_URL,reviewCreated).then(function(response){console.log(`${name} your review was successfully posted`,response);DBHelper.fetchReviewsById(restaurant.id).then(reviews=>{self.reviews=reviews;resetReviews(reviews);fillReviewsHTML();}).catch(error=>{alert(error);});}).catch(function(error){if(error){console.log("review added to database. Will be posted when online");}
console.log(error);});}else console.log("You are trying to post an empty review.");};const resetReviews=reviews=>{self.reviews=[];const ul=document.getElementById("reviews-list");ul.innerHTML="";self.reviews=reviews;};function favResto(idRestaurant){let id=idRestaurant.toString();setTimeout(()=>{var favCheck=document.getElementById(`favcheckbox-${id}`);favCheck.addEventListener("change",function(){if(this.checked){DBHelper.favRestaurant(id);}else{DBHelper.unfavRestaurant(id);}});},300);}